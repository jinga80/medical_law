# Generated by Django 4.2 on 2025-07-01 09:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('hospital_hr', '병원 인사담당자'), ('hospital_manager', '병원 부서 관리자'), ('hh_ceo', '헤드헌팅 대표'), ('hh_manager', '헤드헌팅 팀장'), ('hh_staff', '헤드헌팅 대리'), ('system_admin', '시스템 관리자')], max_length=20, verbose_name='역할')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='연락처')),
                ('department', models.CharField(blank=True, max_length=50, verbose_name='부서')),
                ('position', models.CharField(blank=True, max_length=50, verbose_name='직책')),
                ('employee_id', models.CharField(blank=True, max_length=20, verbose_name='사원번호')),
                ('is_active_user', models.BooleanField(default=True, verbose_name='활성 사용자')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/', verbose_name='프로필 이미지')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='마지막 활동')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자들',
                'ordering': ['organization', 'role', 'username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='기관명')),
                ('org_type', models.CharField(choices=[('hospital', '병원'), ('headhunting', '헤드헌팅'), ('admin', '관리기관')], max_length=20, verbose_name='기관 유형')),
                ('address', models.TextField(blank=True, verbose_name='주소')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='전화번호')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='이메일')),
                ('description', models.TextField(blank=True, verbose_name='기관 설명')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
            ],
            options={
                'verbose_name': '기관',
                'verbose_name_plural': '기관들',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', '로그인'), ('logout', '로그아웃'), ('create_job_request', '채용 요청 생성'), ('update_job_request', '채용 요청 수정'), ('recommend_candidate', '후보자 추천'), ('review_candidate', '후보자 검토'), ('schedule_interview', '면접 일정 조율'), ('complete_interview', '면접 완료'), ('make_decision', '최종 결정')], max_length=20, verbose_name='활동 유형')),
                ('description', models.TextField(verbose_name='활동 설명')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP 주소')),
                ('user_agent', models.TextField(blank=True, verbose_name='사용자 에이전트')),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='관련 객체 ID')),
                ('related_object_type', models.CharField(blank=True, max_length=50, verbose_name='관련 객체 타입')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='활동 시간')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '사용자 활동',
                'verbose_name_plural': '사용자 활동들',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='accounts.organization', verbose_name='소속 기관'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
